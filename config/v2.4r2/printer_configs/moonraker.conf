[server]
host: 0.0.0.0
port: 7125
# Verbose logging used for debugging . Default False.
# The maximum size allowed for a file upload (in MiB).  Default 1024 MiB
max_upload_size: 1024
klippy_uds_address: ~/printer_data/comms/klippy.sock

[file_manager]
# post processing for object cancel. Not recommended for low resource SBCs such as a Pi Zero. Default False 
enable_object_processing: True

[authorization]
cors_domains:
    https://my.mainsail.xyz
    http://my.mainsail.xyz
    http://*.local
    http://*.lan
trusted_clients:
    10.0.0.0/8
    127.0.0.0/8
    169.254.0.0/16
    172.16.0.0/12
    192.168.0.0/16
    FE80::/10
    ::1/128

# enables partial support of Octoprint API
[octoprint_compat]

# enables moonraker to track and store print history.
[history]

# enables use of template-able secrets via moonraker.secrets
[secrets]

# this enables moonraker's update manager
[update_manager]
refresh_interval: 168 

[update_manager Mainsail]
type: web
repo: mainsail-crew/mainsail
path: ~/mainsail

[update_manager mainsail-config]
type: git_repo
primary_branch: master
path: ~/mainsail-config
origin: https://github.com/mainsail-crew/mainsail-config.git
managed_services: klipper

[update_manager Katapult]
type: git_repo
path: ~/Katapult
origin: https://github.com/Arksine/Katapult.git
primary_branch: master
is_system_service: False

# Crowsnest update_manager entry
[update_manager crowsnest]
type: git_repo
path: ~/crowsnest
origin: https://github.com/mainsail-crew/crowsnest.git
managed_services: crowsnest
install_script: tools/pkglist.sh

[update_manager Klipper-Adaptive-Meshing-Purging]
type: git_repo
channel: dev
path: ~/Klipper-Adaptive-Meshing-Purging
origin: https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging.git
managed_services: klipper
primary_branch: main

[update_manager KlipperScreen]
type: git_repo
path: ~/KlipperScreen
origin: https://github.com/jordanruthe/KlipperScreen.git
env: ~/.KlipperScreen-env/bin/python
requirements: scripts/KlipperScreen-requirements.txt
install_script: scripts/KlipperScreen-install.sh
managed_services: KlipperScreen

[update_manager Led_Effect]
type: git_repo
path: ~/klipper-led_effect
origin: https://github.com/julianschill/klipper-led_effect.git
# install_script: install-led_effect.sh
is_system_service: False

## moonrake-timelapse bits
[timelapse]
##   Following basic configuration is default to most images and don't need
##   to be changed in most scenarios. Only uncomment and change it if your
##   Image differ from standart installations. In most common scenarios 
##   a User only need [timelapse] in there configuration.
#output_path: ~/timelapse/
##   Directory where the generated video will be saved
#frame_path: /tmp/timelapse/
##   Directory where the temporary frames are saved
#ffmpeg_binary_path: /usr/bin/ffmpeg
##   Directory where ffmpeg is installed

[update_manager Timelapse]
type: git_repo
primary_branch: main
path: ~/moonraker-timelapse
origin: https://github.com/mainsail-crew/moonraker-timelapse.git

[notifier print_start]
url: discord://{secrets.discord.WebhookID}/{secrets.discord.WebhookToken}
events: started
body: BlueHulk started printing '{event_args[1].filename}'

[notifier print_complete]
url: discord://{secrets.discord.WebhookID}/{secrets.discord.WebhookToken}
events: complete
body: Blue Hulk completed printing '{event_args[1].filename}'
attach: http://127.0.0.1/webcam/?action=snapshot

[notifier print_error]
url: discord://{secrets.discord.WebhookID}/{secrets.discord.WebhookToken}
events: error
body: Blue Hulk {event_args[1].message}
attach: http://127.0.0.1/webcam/?action=snapshot

[notifier gcode_discord]
url: discord://{secrets.discord.WebhookID}/{secrets.discord.WebhookToken}
events: gcode
body: Blue Hulk {event_message}
attach: http://127.0.0.1/webcam/?action=snapshot
