[gcode_macro G32]
gcode:
    LOGO_IDLE_OFF
    STATUS_HOMING
    G28
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    G28 Z
    G0 X150 Y150 Z30 F36000
    LOGO_IDLE_ON

[gcode_macro logo_idle_on]
gcode:
    SET_LED_EFFECT EFFECT=logo_idle

[gcode_macro logo_idle_off]
gcode:
    SET_LED_EFFECT EFFECT=logo_idle STOP=1

[gcode_macro status_heating]
gcode:
    SET_LED_EFFECT EFFECT=logo_idle STOP=1
    SET_LED_EFFECT EFFECT=sb_nozzle_heating

[gcode_macro status_cooling]
gcode:
    SET_LED_EFFECT EFFECT=sb_nozzle_heating STOP=1
    SET_LED_EFFECT EFFECT=sb_nozzle_cooling
    SET_LED_EFFECT EFFECT=logo_idle

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50) %}
    {% set Y = params.Y|default(0) %}
    {% set Z = params.Z|default(10) %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro PRINT_START]
description: PRINT_START macro, needs BED_TEMP and EXTRUDER_TEMP passed from slicer
gcode:
    ## KAMP
    SETUP_KAMP_MESHING LED_ENABLE=1 FUZZ_ENABLE=1
    SETUP_VORON_PURGE FLOW_RATE=12
    SETUP_LINE_PURGE PURGE_AMOUNT=50 LINE_LENGTH=60 FLOW_RATE=12
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # light up case
    SET_PIN PIN=Case_LEDs VALUE=0.25
    # set and wait for bed to heat
    M190 S{BED_TEMP}
    # start warming up extruder to modest temp, no wait
    M104 S160
    # home + qgl + home z
    G32
    LOGO_IDLE_OFF
    STATUS_MESHING
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    #BED_MESH_PROFILE LOAD=default
    # use absolute coordinates
    STATUS_BUSY
    G90
    # # move the nozzle near the bed
    # G1 Z20 F3000
    # # move the nozzle very close to the bed
    # G1 Z0.15 F300
    # #STATUS_HEATING
    # # set nozzle to reach printing temp
    # M104 S{EXTRUDER_TEMP}
    # # purge/prime
    # G1 Z20 F3000
    # G1 X2 Y20 Z2 F3000
    # # set nozzle to reach printing temp
    M109 S{EXTRUDER_TEMP}
    VORON_PURGE
    ## LINE_PURGE
    # G1 Z0.28 F240
    # G92 E0
    # G1 Y115 E10 F1500
    # G1 X2.3 F3000
    # G1 Y20 E15 F1500
    # # G1 F10000
    SET_VELOCITY_LIMIT ACCEL=10000
    STATUS_PRINTING

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F3600                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    STATUS_OFF
    LOGO_IDLE_ON
    SET_PIN PIN=Case_LEDs VALUE=0.09


[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern
            # Diagonals
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            
            # Box
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
        
        # Small pattern
            # Small diagonals 
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            
            # Small box
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        G28
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

[gcode_macro MOTORS_OFF]
description: Turn off SB Nozzle LEDs and motors
gcode:
    STATUS_OFF
    M18

[gcode_macro CENTER]
gcode:
    LOGO_CYAN
    NOZZLE_WHITE
    G90
    G1 X150 Y150 F1500

[gcode_macro DECON]
gcode:
    M109 S250
    G90
    G1 X245 Y300 Z3 F5000
    G1 X295
    G1 X245
    G1 X295
    G1 X245
    G1 X295
    G1 X245
    G1 X295
    G1 X245
    G1 X295
    G1 X245
    G1 X295
    G1 X245
    G1 X295
    G1 X245
    G1 X295
    G1 X245
    G1 X295
    G1 X245
    M104 S0

[gcode_macro CASE_LIGHTS_OFF]
gcode:
    SET_PIN PIN=Case_LEDs VALUE=0.00

[gcode_macro CASE_LIGHTS_ON]
gcode:
    SET_PIN PIN=Case_LEDs VALUE=0.25

[gcode_macro LOGO_CYAN]
gcode:
    _SET_SB_LEDS LED=sb_leds RED=0 BLUE=0.05 GREEN=0.05 IDX="1" TRANSMIT=1

[gcode_macro NOZZLE_WHITE]
gcode:
    _SET_SB_LEDS LED=sb_leds WHITE=0.66 IDX="2,3" TRANSMIT=1

##[gcode_macro clean_nozzle]
##gcode:
##  {% set wipe_count = 8 %}
##  SAVE_GCODE_STATE NAME=clean_nozzle_state
##  G90
##  G0 Z15 F300
##  {% for wipe in range(wipe_count) %}
##    {% for coordinate in [(275, 4),(235, 4)] %}
##      G0 X{coordinate[0]} Y{coordinate[1] + 0.25 * wipe} Z9.7 F12000
##    {% endfor %}
##  {% endfor %}
##  RESTORE_GCODE_STATE NAME=clean_nozzle_state
##
## Your lucky number is: {{ range(1, 51) | random }}

#[gcode_macro DISCO_SB]
#description: StealthBurner disco lights
#gcode:
#  {% for c in range(0,11) %}
#    _SET_SB_LEDS LED=sb_leds WHITE=0.{{% random (1,10) | random %}} IDX={{% range (1,4) | random %}} TRANSMIT=1
#    G4 P{{% range (1,200) | random %}}
#  {% endfor %}


[gcode_macro DISCO_NEW]
description: Disco lights
gcode:
  {% for r in range(1,4) %}
    {% for c in range(0,11) %}
      _SET_SB_LEDS LED=sb_leds WHITE=0.{c} IDX={r} TRANSMIT=1
      G4 P250
    {% endfor %}
  {% endfor %}

[gcode_macro DISCO]
gcode:
    STATUS_OFF
    STATUS_BUSY
    G4 P100
    STATUS_OFF
    STATUS_CLEANING
    G4 P100
    STATUS_OFF
    STATUS_HEATING
    G4 P100
    STATUS_OFF
    STATUS_HOMING
    G4 P100
    STATUS_OFF
    STATUS_LEVELING
    G4 P100
    STATUS_OFF
    STATUS_MESHING
    G4 P100
    STATUS_OFF
    STATUS_PRINTING
    G4 P100
    STATUS_OFF
    STATUS_READY
    G4 P100
    STATUS_OFF
    STATUS_BUSY
    G4 P100
    STATUS_OFF
    STATUS_CLEANING
    G4 P100
    STATUS_OFF
    STATUS_HEATING
    G4 P100
    STATUS_OFF
    STATUS_HOMING
    G4 P100
    STATUS_OFF
    STATUS_LEVELING
    G4 P100
    STATUS_OFF
    STATUS_MESHING
    G4 P100
    STATUS_OFF
    STATUS_PRINTING
    G4 P100
    STATUS_OFF
    STATUS_READY
    G4 P100
    STATUS_OFF
    STATUS_BUSY
    G4 P100
    STATUS_OFF
    STATUS_CLEANING
    G4 P100
    STATUS_OFF
    STATUS_HEATING
    G4 P100
    STATUS_OFF
    STATUS_HOMING
    G4 P100
    STATUS_OFF
    STATUS_LEVELING
    G4 P100
    STATUS_OFF
    STATUS_MESHING
    G4 P100
    STATUS_OFF
    STATUS_PRINTING
    G4 P100
    STATUS_OFF
    STATUS_READY
    G4 P100
    STATUS_OFF
    STATUS_BUSY
    G4 P100
    STATUS_OFF
    STATUS_CLEANING
    G4 P100
    STATUS_OFF
    STATUS_HEATING
    G4 P100
    STATUS_OFF
    STATUS_HOMING
    G4 P100
    STATUS_OFF
    STATUS_LEVELING
    G4 P100
    STATUS_OFF
    STATUS_MESHING
    G4 P100
    STATUS_OFF
    STATUS_PRINTING
    G4 P100
    STATUS_OFF
    STATUS_READY
    G4 P100
    STATUS_OFF
    STATUS_BUSY
    G4 P100
    STATUS_OFF
    STATUS_CLEANING
    G4 P100
    STATUS_OFF
    STATUS_HEATING
    G4 P100
    STATUS_OFF
    STATUS_HOMING
    G4 P100
    STATUS_OFF
    STATUS_LEVELING
    G4 P100
    STATUS_OFF
    STATUS_MESHING
    G4 P100
    STATUS_OFF
    STATUS_PRINTING
    G4 P100
    STATUS_OFF
    STATUS_READY
