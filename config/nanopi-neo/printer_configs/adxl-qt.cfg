[mcu rp2040]
serial: /dev/serial/by-id/usb-Klipper_rp2040_DF60BCA003664732-if00

[temperature_sensor rp2040]
## rp2040:adc4
sensor_type: temperature_mcu
sensor_mcu:  rp2040
gcode_id:    RP2040

[adxl345]
## uses sw spi
cs_pin:                rp2040:gpio5     # pin  8 -   RX / CSn0 ==> ADXL CS
spi_software_sclk_pin: rp2040:gpio6     # pin  9 -  SCK / SCK0 ==> ADXL SCL
spi_software_mosi_pin: rp2040:gpio3     # pin 11 - MOSI / TX0  ==> ADXL SDA
spi_software_miso_pin: rp2040:gpio4     # pin 10 - MISO / RX0  ==> ADXL SDO
axes_map: -x,-y,z

[resonance_tester]
accel_chip: adxl345
probe_points:
    60, 60, 20  # center of bed

[neopixel pico_led]
pin: rp2040:gpio12
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
color_order: GRBW
initial_RED:   0.17
initial_GREEN: 0.04
initial_BLUE:  0.27
initial_WHITE: 0.0
#   SET_LED LED=pico_led RED=0.17 GREEN=0.04 BLUE=0.27 SYNC=0

## requires klipper-led_effects plugin
## https://github.com/julianschill/klipper-led_effect
[led_effect pico_idle]
autostart:              true
frame_rate:             24
leds:
    neopixel:pico_led (1)
layers:
    breathing      10 1     top (0.17,.04,.27)


[output_pin pico_power_led]
pin: rp2040:gpio11
value: 1
shutdown_value: 0

[gcode_macro PICO_POWER]
gcode:
  SET_PIN PIN=pico_power_led VALUE={(not printer['output_pin pico_power_led'].value)|int}
