[server]
host: 0.0.0.0
port: 7125
# The maximum size allowed for a file upload (in MiB).  Default 1024 MiB
max_upload_size: 1024
# Path to klippy Unix Domain Socket
klippy_uds_address: ~/printer_data/comms/klippy.sock

[file_manager]
# post processing for object cancel. Not recommended for low resource SBCs such as a Pi Zero. Default False
enable_object_processing: True

[authorization]
cors_domains:
    https://my.mainsail.xyz
    http://my.mainsail.xyz
    http://*.local
    http://*.lan
trusted_clients:
    10.0.0.0/8
    127.0.0.0/8
    169.254.0.0/16
    172.16.0.0/12
    192.168.0.0/16
    FE80::/10
    ::1/128

# enables partial support of Octoprint API
[octoprint_compat]

# enables moonraker to track and store print history.
[history]

# this enables moonraker announcements for mainsail
[announcements]
subscriptions:
    mainsail

# this enables moonraker's update manager
[update_manager]
refresh_interval: 168
enable_auto_refresh: True

[update_manager Mainsail]
type: web
channel: stable
repo: mainsail-crew/mainsail
path: ~/mainsail

[update_manager Mainsail-Config]
type: git_repo
primary_branch: master
path: ~/mainsail-config
origin: https://github.com/mainsail-crew/mainsail-config.git
managed_services: klipper

[update_manager Timelapse]
type: git_repo
primary_branch: main
path: ~/moonraker-timelapse
origin: https://github.com/mainsail-crew/moonraker-timelapse.git
install_script: scripts/install.sh
managed_services: klipper moonraker

[timelapse]
##   Directory where the generated video will be saved
output_path: ~/timelapse/
##   Directory where ffmpeg is installed
ffmpeg_binary_path: /usr/bin/ffmpeg
#snapshoturl:: http://127.0.0.1:8080/snapshot

# Crowsnest update_manager entry
# [update_manager Crowsnest]
# type: git_repo
# path: ~/crowsnest
# origin: https://github.com/mainsail-crew/crowsnest.git
# managed_services: Crowsnest
# install_script: tools/install.sh

# Sonar update_manager entry
[update_manager Sonar]
type: git_repo
path: ~/sonar
origin: https://github.com/mainsail-crew/sonar.git
primary_branch: main
managed_services: Sonar
install_script: tools/install.sh

[update_manager LED_Effect]
type: git_repo
path: ~/klipper-led_effect
origin: https://github.com/julianschill/klipper-led_effect.git
install_script: install-led_effect.sh
is_system_service: False

[update_manager CanBoot]
type: git_repo
path: ~/CanBoot
origin: https://github.com/Arksine/CanBoot.git
primary_branch: master
is_system_service: False

[update_manager KlipperScreen]
type: git_repo
path: ~/KlipperScreen
origin: https://github.com/jordanruthe/KlipperScreen.git
env: ~/.KlipperScreen-env/bin/python
requirements: scripts/KlipperScreen-requirements.txt
install_script: scripts/KlipperScreen-install.sh
managed_services: KlipperScreen

# [update_manager SpyGlass]
# type: git_repo
# path: ~/spyglass
# origin: https://github.com/roamingthings/spyglass
# primary_branch: master
# managed_services: spyglass
# #install_script: make install
# #is_system_service: True

[notifier print_start]
url: discord://{secrets.discord.WebhookID}/{secrets.discord.WebhookToken}
events: started
body: Grape Ape started printing '{event_args[1].filename}'

[notifier print_complete]
url: discord://{secrets.discord.WebhookID}/{secrets.discord.WebhookToken}
events: complete
body: Grape Ape completed printing '{event_args[1].filename}'
attach: http://127.0.0.1/webcam/snapshot
# attach: http://127.0.0.1/webcam/?action=snapshot

[notifier print_error]
url: discord://{secrets.discord.WebhookID}/{secrets.discord.WebhookToken}
events: error
body: Grape Ape {event_args[1].message}
attach: http://127.0.0.1/webcam/snapshot
# attach: http://127.0.0.1/webcam/?action=snapshot

[notifier gcode_discord]
url: discord://{secrets.discord.WebhookID}/{secrets.discord.WebhookToken}
events: gcode
body: Grape Ape {event_message}
attach: http://127.0.0.1/webcam/snapshot
# attach: http://127.0.0.1/webcam/?action=snapshot
