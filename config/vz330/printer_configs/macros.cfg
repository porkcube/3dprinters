[gcode_macro M600]
gcode:
    {% set X = params.X|default(50) %}
    {% set Y = params.Y|default(0) %}
    {% set Z = params.Z|default(10) %}
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1

[gcode_macro G32]
description: G28 + CENTER
gcode:
    G28
    CENTER

[gcode_macro WARM_UP]
gcode:
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110
    SET_FAN_SPEED FAN=chamber_fan SPEED=1
    G28
    SET_PIN PIN=LED VALUE=1.00
    CENTER
    G91
    G1 Z+10 F1800
    G90

##################
## klipperscreen
##################
[gcode_macro T0]
description: Crude toggle implementation for use in KlipperScreen's Extrude menu to heat/cool extruder
gcode:
    {% set extruder_temp = printer.extruder.temperature %}
    {% if extruder_temp >= 150 %}
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
    {% else %}
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET=250
    {% endif %}

[gcode_macro LOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    SAVE_GCODE_STATE NAME=load_state
    M300 # beep
    G91
    G92 E0
    G1 E350 F{max_velocity} # fast-load
    G1 E25 F{speed} # purge
    M300
    M300
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    M300 # beep
    G92 E0
    G1 E25 F{speed} # purge
    G1 E-420 F{max_velocity} # fast-unload
    M300
    M300
    RESTORE_GCODE_STATE NAME=unload_state
##################
##################
# [gcode_macro UNLOAD_FILAMENT]
# description: Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
# gcode:
#   SAVE_GCODE_STATE NAME=unload_state
#   G91
#   {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
#     M117 Heating...
#     # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
#     M104 S{params.TEMP|default(220, true)}
#     TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
#   {% endif %}
#   M117 Unloading filament...
#   # Extract filament to cold end area 
#   G0 E-5 F3600
#   # Wait for three seconds
#   G4 P3000
#   # Push back the filament to smash any stringing 
#   G0 E5 F3600
#   # Extract back fast in to the cold zone 
#   G0 E-15 F3600
#   # Continue extraction slowly, allow the filament time to cool solid before it reaches the gears       
#   G0 E-130 F300
#   M117 Filament unloaded!
#   RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
#   RESTORE_GCODE_STATE NAME=unload_state
#
#
# [gcode_macro LOAD_FILAMENT]
# description: Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
# gcode:
#   SAVE_GCODE_STATE NAME=load_state
#   G91
#   # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
#   {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
#     M117 Heating...
#     M104 S{params.TEMP|default(220, true)}
#     TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
#   {% endif %}
#   M117 Loading filament...
#   # Load the filament into the hotend area.
#   G0 E100 F600
#   # Wait a secod
#   G4 P1000
#   # Purge
#   G0 E40 F100
#   # Wait for purge to complete
#   M400e
#   M117 Filament loaded!
#   RESPOND MSG="Filament loaded!"
#   RESTORE_GCODE_STATE NAME=load_state
##################
##################


[gcode_macro RETRACT_CLEAN]
description: Slow retract, extrude, retract moves for a cleaner tip
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    M109 S250
    # SET_HEATER_TEMPERATURE HEATER=extruder TARGET=250
    # G90
    # G1 Z15
    G91
    G1 E-10 F900
    G1 E5 F600
    G1 E-10 F300
    G1 E-50 F900
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1

[delayed_gcode EXHAUST_STOP]
initial_duration: 0
gcode:
    SET_FAN_SPEED FAN=Exhaust_fan SPEED=0
    SET_FAN_SPEED FAN=chamber_fan SPEED=0
    SET_FAN_SPEED FAN=RSCS SPEED=0
    SET_PIN PIN=LED value=0

[gcode_macro _exhaust_timer]
description: Waits 30mins then runs macro to stop exhaust fan
gcode:
    SET_FAN_SPEED FAN=Exhaust_fan SPEED=1
    SET_FAN_SPEED FAN=RSCS SPEED=1
    UPDATE_DELAYED_GCODE ID=EXHAUST_STOP DURATION=1800

[gcode_macro _exhaust_timer_cancel]
description: Cancels waits for macro to stop exhaust fan
gcode:
    UPDATE_DELAYED_GCODE ID=EXHAUST_STOP DURATION=0
    SET_FAN_SPEED FAN=Exhaust_fan SPEED=0
    SET_FAN_SPEED FAN=RSCS SPEED=0

[gcode_macro _extrude_100]
description: extrude 100mm @ 1mm/s
gcode:
    M83
    G1 E100 F60

[gcode_macro PRINT_START]
description: PRINT_START macro, needs BED_TEMP and EXTRUDER_TEMP passed from slicer
gcode:
    ## KAMP cfg
    SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1 FUZZ_ENABLE=1 MARGIN_ENABLE=1 MARGIN_SIZE=10
    SETUP_LINE_PURGE DISPLAY_PARAMETERS=1 PURGE_AMOUNT=25 LINE_LENGTH=60 FLOW_RATE=24
    # SETUP_KAMP_MESHING FUZZ_ENABLE=1
    # SETUP_LINE_PURGE PURGE_AMOUNT=50 LINE_LENGTH=60 FLOW_RATE=24
    ## make sure fans are going
    SET_FAN_SPEED FAN=chamber_fan SPEED=1
    ## make sure case LEDs are on
    SET_PIN PIN=LED value=1
    # SET_PIN PIN=Case_LEDs VALUE=0.33
    ## use values passed from slicer, or "sane" defaults 
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # set and wait for bed to heat
    M190 S{BED_TEMP}
    # start warming up extruder to modest temp, no wait
    M104 S160
    # home + fresh mesh
    G28
    SKEW_PROFILE LOAD=default
    ## KAMP
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    # BED_MESH_PROFILE LOAD="default"
    # use absolute coordinates
    # M109 S{EXTRUDER_TEMP}
    # set nozzle temp, no wait
    M109 S{EXTRUDER_TEMP} 
    G90
    #####
    # # move the nozzle near the bed
    # G1 Z20 F1000
    # # move the nozzle very close to the bed
    # # purge/prime
    # G1 X5 Y10 Z10 F1000
    # # set and wait for nozzle to reach printing temp
    # ## M109 S{EXTRUDER_TEMP}
    # G1 X5 Y15 Z2 F1000
    # G1 Z0.28 F240
    # G92 E0
    # G1 Y110 E20 F1000
    # G1 X5.3 F1000
    # G1 Y20 E30 F1000
    # G1 X-1 Z9
    # M109 S{EXTRUDER_TEMP}
    #####
    # move the nozzle near the bed
    # purge/prime
#    # G1 X3 Y3 Z10 F1000
    # set and wait for nozzle to reach printing temp
#    # M109 S{EXTRUDER_TEMP}
    LINE_PURGE

## disable sensor at startup
# [delayed_gcode _disable_filament_sensor]
# initial_duration: 5
# gcode:
#   SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M117 Print Ending
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    G91
    G1 Z+25 F1500
    G90

    TURN_OFF_HEATERS
    _EXHAUST_TIMER
    M117 Print Complete

[gcode_macro CENTER]
gcode:
    G90
    G1 X165 Y165 Z15 F6000

[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1

# [gcode_macro WIPE_LINE]
# gcode:
#     {% set z = params.Z|default(0.25)|float %}
#     {% set NOZZLE = printer.extruder.nozzle_diameter|default(0.4)|float %}
#     {% set n = params.N|default(NOZZLE)|float %}
#     {% set X_MAX = printer.toolhead.axis_maximum.x|default(200)|float %}
#     {% set Y_MAX = printer.toolhead.axis_maximum.y|default(200)|float %}
#     {% set Z_MAX = printer.toolhead.axis_maximum.z|default(150)|float %}
#     {% set X_START = printer.toolhead.axis_minimum.x|default(0)|float + n %}
#     {% set Y_START = printer.toolhead.axis_minimum.y|default(0)|float + n %}
#     {% if X_START < 0 %}
#         {% set X_START = n %}
#     {% endif %}
#     {% if Y_START < 0 %}
#         {% set Y_START = n %}
#     {% endif %}
#     {% set FILADIA = printer.extruder.filament_diameter|default(1.75)|float %}
#     {% set EXTRUDER_RATIO = printer.configfile.config.extruder.nozzle_diameter|float / n %}
#     {% set PRIMER_WIDTH = 0.75 * NOZZLE %}
#     {% set PRIMER_HEIGHT = 0.70 * NOZZLE %}
#     {% set PRIMER_SECT = PRIMER_WIDTH * PRIMER_HEIGHT %}
#     {% set PRIMER_VOL = PRIMER_SECT * (X_MAX - 3 * X_START) %}
#     {% set FILA_SECT = 3.1415 * ( FILADIA / 2.0)**2 %}
#     {% set FILA_LENGTH = 1.55 * PRIMER_VOL / FILA_SECT %}
#     {% if printer.toolhead.homed_axes != "xyz" %}
#         {action_respond_info("Please home XYZ first")}
#     {% elif printer.extruder.can_extrude != True %}
#         {action_respond_info("Extruder temperature too low")}
#     {% else %}
#         SAVE_GCODE_STATE NAME=WIPE_LINE_state
#         M117 Priming nozzle
#         M82
#         G90
#         G92 E0
#         G1 X{X_START} Y{Y_START} Z3 F2500 ; Move down to prestart position
#         G1 X{X_START} Y{Y_START + 25} Z{PRIMER_HEIGHT} F5000.0 ; Move to start position
#         G1 X{X_START} Y{Y_MAX - 25} Z{PRIMER_HEIGHT} F1500.0 E{15 * EXTRUDER_RATIO} ; Draw the first line
#         G1 X{X_START + PRIMER_WIDTH} Y{Y_MAX - 25} Z{PRIMER_HEIGHT} F5000.0 ; Move to side a little
#         G1 X{X_START + PRIMER_WIDTH} Y{Y_START + 25} Z{PRIMER_HEIGHT} F1500.0 E{30 * EXTRUDER_RATIO} ; Draw the second line
#         RESTORE_GCODE_STATE NAME=WIPE_LINE_state MOVE=0
#         M117 Priming complete
#     {% endif %}

################################################################################################
################################################################################################
#####               MACROS                  
################################################################################################
################################################################################################
[gcode_macro RETRACTION_UP]
gcode:
    {% set CRLEN = printer.firmware_retraction.retract_length|float %}
    {% set NRLEN = CRLEN|float + 0.1 %}
    { action_respond_info("current retract_length %.2f, new retract_length %.2f" % (CRLEN, NRLEN))  }
    SET_RETRACTION RETRACT_LENGTH={NRLEN}    


[gcode_macro RETRACTION_DOWN]
gcode:
    {% set CRLEN = printer.firmware_retraction.retract_length|float %}
    {% set NRLEN = CRLEN|float - 0.1 %}
    { action_respond_info("current retract_length %.2f, new retract_length %.2f" % (CRLEN, NRLEN))  }
    SET_RETRACTION RETRACT_LENGTH={NRLEN}   


#[gcode_macro SET_RETRACTIONLENGTH]
#gcode:
#  SET_RETRACTION RETRACT_LENGTH={params.LENGTH|float}
#  GET_RETRACTION


########################    
[gcode_macro exhaustfan_on]
gcode: 
    SET_FAN_SPEED FAN=Exhaust_fan SPEED=1


### 
    
[gcode_macro exhaustfan_off]
gcode: 
    SET_FAN_SPEED FAN=Exhaust_fan SPEED=0
    
    
###     
    
[gcode_macro enclosurefan_on]
gcode: 
    # SET_FAN_SPEED FAN=chamber_fan SPEED=1


###         
    
[gcode_macro enclosurefan_off]
gcode: 
    # SET_FAN_SPEED FAN=chamber_fan SPEED=0


[gcode_macro RSCS_on]
gcode: 
    SET_FAN_SPEED FAN=RSCS SPEED=1


### 
    

[gcode_macro RSCS_off]
gcode: 
    SET_FAN_SPEED FAN=RSCS SPEED=0



###

[gcode_macro LED_on]
gcode:
    SET_PIN PIN=LED value=1   


[gcode_macro LED_off]
gcode:
    SET_PIN PIN=LED value=0  


### 
    
[gcode_macro PA_tunning]
gcode: 
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
    TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.005


#####

[gcode_macro POWER_OFF]
gcode:
  {action_call_remote_method("set_device_power",
                             device="tplink",
                             state="off")}
#####   

[gcode_macro TEST_RESONNANCES_X]
gcode:
 TEST_RESONANCES AXIS=X


[gcode_macro TEST_RESONNANCES_Y]
gcode:
 TEST_RESONANCES AXIS=Y


[gcode_macro DUMP_WARNINGS]
description: Debug: Print all warning messages from klipper
gcode:
  {% set parameters = ["printer.configfile.warnings:"] %}
  {% for warning in printer.configfile.warnings %}
      {% set parameters = parameters.append("%s -> %s -> %s\n%s" % (warning.type, warning.section, warning.option, warning.message)) %}
  {% endfor %}
  {action_respond_info(parameters|join("\n"))}


[gcode_macro ACCELL_TEST_X]
gcode:

    {% set steps = params.STEPS|default(100)|int %}
    {% set speed = params.VELOCITY|default(1000)|float * 60 %}

    {% set inset = 10.0|float %}
    {% set accel = 10000|int %}
    {% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}
    {% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}
    {% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}
    {% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}

    SAVE_GCODE_STATE NAME=accelltest_state

    SET_VELOCITY_LIMIT ACCEL={accel} 
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL={accel}
    G28
    G1 Z5
    G1 X{minX} Y{minY} F{speed} 

    {% for INTERVAL in range(steps) %}
        {% set eff = accel + (INTERVAL * 1000) %} 
        SET_VELOCITY_LIMIT ACCEL={eff} 
        SET_VELOCITY_LIMIT ACCEL_TO_DECEL={eff}
        G1 X{minX} Y{minY} F{speed}  
        G1 X{maxX} Y{maxY} F{speed}  

    {% endfor %}    

    RESTORE_GCODE_STATE NAME=accelltest_state


[gcode_macro ACCELL_TEST_Y]
gcode:

    {% set steps = params.STEPS|default(100)|int %}
    {% set speed = params.VELOCITY|default(1000)|float * 60 %}

    {% set inset = 10.0|float %}
    {% set accel = 10000|int %}
    {% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}
    {% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}
    {% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}
    {% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}

    SAVE_GCODE_STATE NAME=accelltest_state

    SET_VELOCITY_LIMIT ACCEL={accel} 
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL={accel}
    G28
    G1 Z5
    G1 X{minX} Y{minY} F{speed} 

    {% for INTERVAL in range(steps) %}
        {% set eff = accel + (INTERVAL * 1000) %} 
        SET_VELOCITY_LIMIT ACCEL={eff} 
        SET_VELOCITY_LIMIT ACCEL_TO_DECEL={eff}
        G1 X{maxX} Y{minY} F{speed}  
        G1 X{minX} Y{maxY} F{speed}  

    {% endfor %}    

    RESTORE_GCODE_STATE NAME=accelltest_state 


[gcode_macro enable_stepper]
gcode:
 SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
 SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
 SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
 SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1
